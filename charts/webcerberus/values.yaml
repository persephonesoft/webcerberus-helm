# Default values for psnservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride: ""

## @param fullnameOverride String to fully override common.names.fullname template
##
fullnameOverride: ""

## @param replicaCount Number of WebCerberus replicas
## The replicas count is fixed and only 1 is applicable now
replicaCount: 1

## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled WebCerberus pods' Security Context
## @param podSecurityContext.fsGroup Set WebCerberus pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  fsGroupChangePolicy: "Always"

## @section Persistence parameters

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  app:
    ## @param persistence.app.storageClass PVC Storage Class for WebCerberus data volume
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClassName: default
    ## @param persistence.app.accessModes PVC Access modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param persistence.app.size PVC Storage Request for WebCerberus data volume
    ##
    size: 10Gi
  blast:
    ## @param persistence.blast.gpfs.useGpfsPvs defines if the existing Persistent Volumes should be used for the BLAST tool.
    ##
    ## @param persistence.blast.gpfs.gpfsVolumes provides the PV list.
    ##
    ## @param persistence.blast.gpfs.gpfsVolumesMounts is pointing out the volumes mounts.
    ##
    ## the 'env:' section below should be updated according to selected mount points.
    gpfs:
      useGpfsPvs: true
      gpfsVolumes:
      - name: blast-data
        persistentVolumeClaim:
          claimName: blast-data-pv-claim-name
          readOnly: false
      - name: blast-script
        persistentVolumeClaim:
          claimName: blast-script-pv-claim-name
          readOnly: false
      gpfsVolumesMounts:
      - name: blast-data
        mountPath: /opt/blastdata/mount/point
      - name: blast-script
        mountPath: /opt/blastscript/mount/point

## Ingress parameters
##
ingresses:
  webcerberus:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    serviceName: psnservice
    servicePort: 80
    path: /
    hosts:
      - webcerberus.space.org
    ## Uncomment tls section if you want to configure TLS Certificate for the ingress.
    ##
    # tls:
    #   - secretName: ingress-tls-cert-webcerberus
    #     hosts:
    #       - webcerberus.space.org

## @param env.ENVPSN_Variable_Name with environment variables to add to WebCerberus node
##
env:
  ## ENVPSN_MariaDB_ConnectionString provide a connection string to the Maria DB database for Webcerberus application
  ##
  # ENVPSN_MariaDB_ConnectionString: 'root/MySecret1@psnmariadb:3306/persephone'
  ## ENVPSN_Solr_URL provide URL of the Solr service. It's default value is 'printf "http://%s-%s:%s/solr" .Release.Name (include "psnservice.solrName" .) (include "psnservice.solrServiceHttpPort" .)'
  ##
  ## ENVPSN_Solr_URL: 'http://psnservice-solr:8983/solr'
  ENVPSN_Solr_CoreName: 'persephone'
  ## The application temporary directory
  ENVPSN_Temp_Directory: '/tmp'
  ## The next directory list must be located on the persistent volume 'psn-data', mounted by path '/opt/data'
  ## Make sure you have changed the mounting point if the directories are changed
  #
  ENVPSN_Blast_DB: '/opt/data/BlastDB/openplants'
  ENVPSN_User_Data_Directory: '/opt/data/DataUsers'
  ENVPSN_Sequence_Storage_Path: '/opt/data/SequenceStorage'
  ENVPSN_Blast_ProgramDirectory: '/opt/blastscript/mount/point'
  ENVPSN_File_Storage_Path: '/opt/blastdata/mount/point'
  ENVPSN_OpenIdEnabled: "'false'"
  ENVPSN_OpenIdProvider: ''
  ENVPSN_OpenIdSecureURL: ''
  ENVPSN_OpenIdSuccessURL: ''
  ENVPSN_AllowAnonymousLogin: "'true'"
  
##
## If you want to use the application custom.config from secret:
##     create secret "persephone-custom-config" from file like:
##        kubectl create secret generic persephone-custom-config --from-file C:\YourPath\to\custom.config  --namespace psnspace --dry-run=client -o yaml | kubectl apply -f -
##     set param custom_config.custom_config_from_secret to "true" 
##
custom_config:
  custom_config_from_secret: false

## @param env_from_secret.ENVPSN_Variable_Name is containing secret name with environment variables value to add to WebCerberus node
## The secrets must be created in advance.
##
env_from_secret:
  ## env_from_secret.ENVPSN_MariaDB_ConnectionString provide a secret name containing connection string to the Maria DB database for Webcerberus application
  ##
  ENVPSN_MariaDB_ConnectionString: webcerberus-mariadb-connection-string

## Section of the BLAST operation parameters
## 
blast:
    ## Configuring the custom CA certificate for the BLAST tool from the secret
    ## The secret must be created in advance.
    customCA:
      useCustomCA: false
      secretName: blast-service-custom-ca

## Section of the WebCerberus container parameters
## 
webcerberus:
  image:
    registry: ""
    repository: persephonesoft/webcerberus
    tag: ""
    pullPolicy: Always

  deployment:
    containerPort: 8080

  probes:
    liveness:
      enabled: false
      path: /_healthcheck
      initialDelaySeconds: 0 # Defaults to 0 seconds. Minimum value is 0.  Used default value in order to have posibility to ovveride is neccesary
      periodSeconds: 30 # Default to 10 seconds. Minimum value is 1.
      timeoutSeconds: 30 # Defaults to 1 second. Minimum value is 1.
      successThreshold: 1 # Defaults to 1. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
      failureThreshold: 3 # Defaults to 3. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
    readiness:
      enabled: false
      path: /_healthcheck
      initialDelaySeconds: 5 # Defaults to 0 seconds. Minimum value is 0.
      periodSeconds: 30 # Default to 10 seconds. Minimum value is 1.
      timeoutSeconds: 30 # Defaults to 1 second. Minimum value is 1.
      successThreshold: 1 # Defaults to 1. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
      failureThreshold: 3 # Defaults to 3. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary

  ## @param resource.limits/requests for the Webcerberus application
  ## The provided below limits/requests values are recomended for test purposes only.
  ## Recomended minimum resource limits are 4 CPU and 16 GB of RAM.
  ##
  resources:
    limits:
      cpu: 1700m
      memory: 2048Mi
    requests:
      cpu: 1000m
      memory: 2048Mi

## Section of the PercephoneShell container parameters
## 
persephoneshell:
  image:
    registry: ""
    repository: persephonesoft/persephoneshell
    tag: ""
    pullPolicy: Always

  deployment:
    containerPort: 80

  probes:
    liveness:
      enabled: false
      path: /_healthcheck
      initialDelaySeconds: 0 # Defaults to 0 seconds. Minimum value is 0. Used default value in order to have posibility to ovveride is neccesary
      periodSeconds: 30 # Default to 10 seconds. Minimum value is 1.
      timeoutSeconds: 30 # Defaults to 1 second. Minimum value is 1.
      successThreshold: 1 # Defaults to 1. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
      failureThreshold: 3 # Defaults to 3. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
    readiness:
      enabled: false
      path: /_healthcheck
      initialDelaySeconds: 5 # Defaults to 0 seconds. Minimum value is 0.
      periodSeconds: 30 # Default to 10 seconds. Minimum value is 1.
      timeoutSeconds: 30 # Defaults to 1 second. Minimum value is 1.
      successThreshold: 1 # Defaults to 1. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
      failureThreshold: 3 # Defaults to 3. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary

  ## @param resource.limits/requests for the InitContainer
  ## The provided below limits/requests values are recomended for test purposes only.
  ##
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 400m
      memory: 512Mi

## Init containers parameters:
## volumePermissions: Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each node
##
volumePermissions:
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 512Mi

  ## Init container' Security Context
  ## Note: the chown of the data folder is done to containerSecurityContext.runAsUser
  ## and not the below volumePermissions.containerSecurityContext.runAsUser
  ## @param volumePermissions.containerSecurityContext.runAsUser User ID for the init container
  ##
  containerSecurityContext:
    enabled: false
    runAsUser: 0
    privileged: true
    allowPrivilegeEscalation: true

imagePullSecrets: []
  # Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  #
  # This uses credentials from secret "docker-registry-creds".
  # - name: docker-registry-creds

service:
  type: ClusterIP
  port: 80

deployment:
  containerPort: 80

probes:
  liveness:
    enabled: false
    path: /_healthcheck
    initialDelaySeconds: 0 # Defaults to 0 seconds. Minimum value is 0. Used default value in order to have posibility to ovveride is neccesary
    periodSeconds: 30 # Default to 10 seconds. Minimum value is 1.
    timeoutSeconds: 30 # Defaults to 1 second. Minimum value is 1.
    successThreshold: 1 # Defaults to 1. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
    failureThreshold: 3 # Defaults to 3. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
  readiness:
    enabled: false
    path: /_healthcheck
    initialDelaySeconds: 5 # Defaults to 0 seconds. Minimum value is 0.
    periodSeconds: 30 # Default to 10 seconds. Minimum value is 1.
    timeoutSeconds: 30 # Defaults to 1 second. Minimum value is 1.
    successThreshold: 1 # Defaults to 1. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary
    failureThreshold: 3 # Defaults to 3. Minimum value is 1. Used default value in order to have posibility to ovveride is neccesary

secrets: {}
  # Optionally specify a set of secret objects whose values
  # will be injected as environment variables by default.
  # You should add this section to a file like secrets.yaml
  # that is explicitly NOT committed to source code control
  # and then include it as part of your helm install step.
  # ref: https://kubernetes.io/docs/concepts/configuration/secret/
  #
  # This creates a secret "mysecret" and injects "mypassword"
  # as the environment variable mysecret_mypassword=password.
  # mysecret:
  #   mypassword: password

## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##

## @section Solr parameters
##
solr:
  ## The 'nameOverride' value used as suffix for the Solr service name. The Solr service name is composed as string: .Value.fullnameOverride-.Value.solr.nameOverride
  ##
  nameOverride: "solr"

  ## Bitnami Solr image version
  ## ref: https://hub.docker.com/r/bitnami/solr/tags
  ## @param image.registry Solr image registry
  ## @param image.repository Solr image repository
  ## @param image.tag Solr image tag (immutable tags are recommended)
  ## @param image.digest Solr image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy image pull policy
  ## @param image.pullSecrets Specify docker-registry secret names as an array
  ## @param image.debug Specify if debug values should be set
  ##
  image:
    registry: docker.io
    repository: bitnami/solr
    tag: 8.11.2-debian-11-r37

  auth:
    ## @param auth.enabled Enable Solr authentication
    ##
    enabled: false
  ## @param coreNames Solr core names to be created
  ##
  coreNames:
    - persephone
  ## @param cloudEnabled Enable Solr cloud mode
  ##
  cloudEnabled: false
  ## @param cloudBootstrap Enable cloud bootstrap. It will be performed from the node 0.
  ##
  cloudBootstrap: false
  ## @param collectionShards Number of collection shards
  ##
  collectionShards: 1
  ## @param collectionReplicas Number of collection replicas
  ##
  collectionReplicas: 1
  ## @param replicaCount Number of solr replicas
  ##
  replicaCount: 1
  ## @param solr.resource.limits/requests for the Persephone Solr service
  ## The provided below limits/requests values are recomended for using with Webcerberus apllication containing 100M units of data.
  ## One unit of data means one annotation or marker.
  ##

  ## @param containerPorts.http Solr HTTP container port
  ##
  containerPorts:
    http: 8983

  ## @section Traffic Exposure parameters
  ##
  service:
    ## @param service.ports.http Solr HTTP service port
    ##
    ports:
      http: 8983

  resources:
    limits:
      cpu: 2000m
      memory: 2048Mi
    requests:
      cpu: 1000m
      memory: 2048Mi

  zookeeper:
    ## @param zookeeper.enabled Enable ZooKeeper deployment. Needed for Solr cloud
    ##
    enabled: false

    ## @param zookeeper.replicaCount Number of ZooKeeper nodes
    ##
    replicaCount: 1

